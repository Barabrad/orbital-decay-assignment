function rho = atmosphericDensity( h, year )
%ATMOSPHERICDENSITY Answer the atmospheric density 
%Input: 
%   h:   Altitude, km
%Output: 
%   rho: Density, kg/m^3
% Data taken from time-averaged curve in SMAD figure 8-2
% Not valid for altitudes much less than 100 km or much greater than 1000
% km

% If year is given, assume sinusoidal variation between solar min and solar
% max

    rho = zeros(size(h)); % Preallocates space for rho values
    
    if nargin >= 2
        y = year - 2009; % Years since solar min
        
        solarMaxData = [ ...
            100, 4.0e-7; ...
            200, 5.0e-10; ...
            300, 7.0e-11; ...
            400, 1.8e-11; ...
            500, 5.0e-12; ...
            600, 1.8e-12; ...
            700, 5.5e-13; ...
            800, 2.5e-13; ...
            900, 1.0e-13; ...
            1000, 4.0e-14; ...
         ];
         solarMinData = [ ...
             100, 4.0e-7; ...
             200, 1.5e-10; ...
             300, 6.0e-12; ...
             400, 3.5e-13; ...
             500, 3.5e-14; ...
             600, 6.0e-15; ...
             700, 2.5e-15; ...
             800, 1.5e-15; ...
             900, 9.0e-16; ...
             1000, 6.0e-16; ...
          ]; 
        hValues = solarMaxData(:,1);
        rhoLogValuesMax = log( solarMaxData(:,2) );
        rhoLogValuesMin = log( solarMinData(:,2) );

        for i=1:length(h)
            didInterp = 0;
            for i2=2:length(hValues)
                i1 = i2 - 1;
                h1 = hValues(i1);
                h2 = hValues(i2);
                r1Max = rhoLogValuesMax(i1);
                r2Max = rhoLogValuesMax(i2);
                r1Min = rhoLogValuesMin(i1);
                r2Min = rhoLogValuesMin(i2);
                if h(i) <= hValues(i2)
                    didInterp = 1;
                    break
                end
            end
            rMax = r1Max + (r2Max - r1Max) * (h(i) - h1) / (h2 - h1);
            rhoMax = exp( rMax );
            rMin = r1Min + (r2Min - r1Min) * (h(i) - h1) / (h2 - h1);
            rhoMin = exp( rMin );
            
            rho(i) = rhoMin + ( rhoMax - rhoMin ) * sin( pi*y/11)^2;
        end

    else
        data = [ ...
            100, 4.0e-7; ...
            125, 1.0e-8;  ...
            163, 1.0e-9;  ...
            200, 3.0e-10; ...
            300, 2.5e-11; ...
            400, 4.0e-12; ...
            500, 9e-13;   ...
            600, 2e-13;   ...
            700, 5e-14;   ...
            800, 2e-14;   ...
            900, 8e-15;   ...
            1000, 4.5e-15; ...
            ];
        hValues = data(:,1);
        rhoLogValues = log( data(:,2) );
        
        for i=1:length(h)
            didInterp = 0;
            for i2=2:length(hValues)
                i1 = i2 - 1;
                h1 = hValues(i1);
                h2 = hValues(i2);
                r1 = rhoLogValues(i1);
                r2 = rhoLogValues(i2);
                if h(i) <= hValues(i2)
                    didInterp = 1;
                    break
                end
            end
            r = r1 + (r2 - r1) * (h(i) - h1) / (h2 - h1);
            rho(i) = exp( r );
        end
    
    end

end